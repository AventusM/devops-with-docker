version: "3.5"

services:
  redis:
    image: redis
    container_name: backend_cache
    restart: unless-stopped

  db:
    image: postgres:13.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=example

    container_name: db_redmine
    volumes:
      - database:/var/lib/postgresql/data

  backend:
    image: go-project # Has to be built through a dockerfile previously or use a username/repository
    container_name: backend
    ports:
      - 8080:8080
    environment:
      - POSTGRES_HOST=db_redmine # Link the db
      - POSTGRES_PASSWORD=example # Use the env password from the host here as well. Everything else defaults to "postgres" like with the postgres docker image env values
      - REQUEST_ORIGIN=http://localhost:5000
      - REDIS_HOST=backend_cache

  frontend:
    image: node-frontend # Has to be built through a dockerfile previously or use a username/repository
    container_name: react
    ports:
      - 5000:5000
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080

volumes:
  database:
    external: true # create a volume "database" before running docker-compose up for this setup to work
